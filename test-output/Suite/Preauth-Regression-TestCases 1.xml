<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="VHT-HO-LP-227" ignored="9" name="Preauth-Regression-TestCases 1" tests="4" failures="0" timestamp="22 Jul 2020 12:12:32 GMT" time="10.346" errors="0">
  <testcase name="@BeforeMethod initialization" time="10.197" classname="com.qa.vidalhealth.Base.TestBase">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="session not created: This version of ChromeDriver only supports Chrome version 80
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;VHT-HO-LP-227&amp;apos;, ip: &amp;apos;192.168.11.76&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_171&amp;apos;
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
	Ordinal0 [0x01450C83+1707139]
	Ordinal0 [0x013B68F1+1075441]
	Ordinal0 [0x0132DFC9+516041]
	Ordinal0 [0x012C0554+66900]
	Ordinal0 [0x012BCCE2+52450]
	Ordinal0 [0x012DBFD7+180183]
	Ordinal0 [0x012DBDDD+179677]
	Ordinal0 [0x012D9D4B+171339]
	Ordinal0 [0x012C1D4A+73034]
	Ordinal0 [0x012C2DC0+77248]
	Ordinal0 [0x012C2D59+77145]
	Ordinal0 [0x013CBB67+1162087]
	GetHandleVerifier [0x014EA966+508998]
	GetHandleVerifier [0x014EA6A4+508292]
	GetHandleVerifier [0x014FF7B7+594583]
	GetHandleVerifier [0x014EB1D6+511158]
	Ordinal0 [0x013C402C+1130540]
	Ordinal0 [0x013CD4CB+1168587]
	Ordinal0 [0x013CD633+1168947]
	Ordinal0 [0x013E5B35+1268533]
	BaseThreadInitThunk [0x75EC0419+25]
	RtlGetAppContainerNamedObjectPath [0x774C662D+237]
	RtlGetAppContainerNamedObjectPath [0x774C65FD+189]
">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 80
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'VHT-HO-LP-227', ip: '192.168.11.76', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
Ordinal0 [0x01450C83+1707139]
Ordinal0 [0x013B68F1+1075441]
Ordinal0 [0x0132DFC9+516041]
Ordinal0 [0x012C0554+66900]
Ordinal0 [0x012BCCE2+52450]
Ordinal0 [0x012DBFD7+180183]
Ordinal0 [0x012DBDDD+179677]
Ordinal0 [0x012D9D4B+171339]
Ordinal0 [0x012C1D4A+73034]
Ordinal0 [0x012C2DC0+77248]
Ordinal0 [0x012C2D59+77145]
Ordinal0 [0x013CBB67+1162087]
GetHandleVerifier [0x014EA966+508998]
GetHandleVerifier [0x014EA6A4+508292]
GetHandleVerifier [0x014FF7B7+594583]
GetHandleVerifier [0x014EB1D6+511158]
Ordinal0 [0x013C402C+1130540]
Ordinal0 [0x013CD4CB+1168587]
Ordinal0 [0x013CD633+1168947]
Ordinal0 [0x013E5B35+1268533]
BaseThreadInitThunk [0x75EC0419+25]
RtlGetAppContainerNamedObjectPath [0x774C662D+237]
RtlGetAppContainerNamedObjectPath [0x774C65FD+189]

at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)
at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)
at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)
at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at com.qa.vidalhealth.Base.TestBase.initialization(TestBase.java:128)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialization -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="com.qa.vidalhealth.Base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod initialization" time="0.0" classname="com.qa.vidalhealth.Base.TestBase">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialization -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="com.qa.vidalhealth.Base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod initialization" time="0.0" classname="com.qa.vidalhealth.Base.TestBase">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialization -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="com.qa.vidalhealth.Base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod initialization" time="0.0" classname="com.qa.vidalhealth.Base.TestBase">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialization -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="com.qa.vidalhealth.Base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="assignCaseManuallyWhichCreatedManuallyTest" time="0.0" classname="com.qa.vidalhealth.TestScripts.ManualCaseAssignmentTest">
    <skipped/>
  </testcase> <!-- assignCaseManuallyWhichCreatedManuallyTest -->
  <testcase name="regularPreauthorizationTest" time="0.0" classname="com.qa.vidalhealth.TestScripts.RegularPreauthorizationGEDTest">
    <skipped/>
  </testcase> <!-- regularPreauthorizationTest -->
  <testcase name="ManualPreAuthMedicalTest" time="0.0" classname="com.qa.vidalhealth.TestScripts.ManualPreAuthMedicalTest">
    <skipped/>
  </testcase> <!-- ManualPreAuthMedicalTest -->
  <testcase name="PreauthTariffTest" time="0.0" classname="com.qa.vidalhealth.TestScripts.PreauthTariffTest">
    <skipped/>
  </testcase> <!-- PreauthTariffTest -->
  <testcase name="requiredInformation_PreauthAuthorisationTest" time="0.0" classname="com.qa.vidalhealth.TestScripts.PreauthAuthorisationTest">
    <ignored/>
  </testcase> <!-- requiredInformation_PreauthAuthorisationTest -->
  <testcase name="@AfterSuite autoReport_MailTrigger" time="0.0" classname="com.qa.vidalhealth.Base.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite autoReport_MailTrigger -->
  <testcase name="@AfterSuite autoReport_MailTrigger" time="0.0" classname="com.qa.vidalhealth.Base.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite autoReport_MailTrigger -->
  <testcase name="@AfterSuite autoReport_MailTrigger" time="0.0" classname="com.qa.vidalhealth.Base.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite autoReport_MailTrigger -->
  <testcase name="@AfterSuite autoReport_MailTrigger" time="0.0" classname="com.qa.vidalhealth.Base.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite autoReport_MailTrigger -->
  <testcase name="approve_PreauthAuthorisationTest_withoutResolveDiscrepancies" time="0.0" classname="com.qa.vidalhealth.TestScripts.PreauthAuthorisationTest">
    <ignored/>
  </testcase> <!-- approve_PreauthAuthorisationTest_withoutResolveDiscrepancies -->
  <testcase name="reject_PreauthAuthorisationTest" time="0.0" classname="com.qa.vidalhealth.TestScripts.PreauthAuthorisationTest">
    <ignored/>
  </testcase> <!-- reject_PreauthAuthorisationTest -->
  <testcase name="manualCaseAssignmentTest" time="0.0" classname="com.qa.vidalhealth.TestScripts.ManualCaseAssignmentTest">
    <ignored/>
  </testcase> <!-- manualCaseAssignmentTest -->
  <testcase name="approve_PreauthAuthorisationTest" time="0.0" classname="com.qa.vidalhealth.TestScripts.PreauthAuthorisationTest">
    <ignored/>
  </testcase> <!-- approve_PreauthAuthorisationTest -->
</testsuite> <!-- Preauth-Regression-TestCases 1 -->
